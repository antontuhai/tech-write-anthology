@startuml AppleTransfer Container Diagram
!define C4Container
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

LAYOUT_WITH_LEGEND()

Person(user, "User", "End-users or admins of the AppleTransfer system.")
Person(developer, "Developer", "Developers using the AppleTransfer SDK for integration into third-party applications.")

Container(sdk, "AppleTransfer SDK", "Library, Python", "Facilitates asynchronous interactions with the AppleTransfer API for developers.")
Container(webApp, "Web application", "JavaScript/React", "Provides an asynchronous user interface for managing apple transfers.")
Container(restApi, "RESTful API", "Python/Flask", "Handles asynchronous business logic, data processing, and external integrations.")
Container(db, "Database", "PostgreSQL", "Stores user and apple transfer data asynchronously.")
Container(authService, "Authentication service", "OAuth 2.0", "Manages user authentication and authorization securely.")
Container(paymentService, "Payment service", "External API", "Processes payment transactions securely and efficiently.")
Container(notificationService, "Notification service", "External API", "Sends asynchronous notifications to users about transfer status.")

Rel(user, webApp, "Uses the web application for initiating and tracking apple transfers")
Rel(developer, sdk, "Integrates with the SDK to utilize apple transfer functionalities in applications")
Rel(sdk, restApi, "Performs asynchronous API calls to", "HTTP/REST")
Rel(webApp, restApi, "Interacts asynchronously with", "HTTP/REST")
Rel(restApi, db, "Performs asynchronous reads and writes to")
Rel(restApi, authService, "Authenticates and authorizes with", "OAuth/HTTP")
Rel(restApi, paymentService, "Processes payments with", "API calls")
Rel(restApi, notificationService, "Sends notifications through", "Webhooks/API calls")

SHOW_LEGEND()
@enduml